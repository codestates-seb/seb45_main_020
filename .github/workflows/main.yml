name: Java CI with Gradle

on:
  push:
    branches: [ feat/BE ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Grant execute permission for gradlew
        run: chmod +x server/gradlew

      - name: Build with Gradle
        working-directory: server
        run: ./gradlew clean build

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t pathfinder-server server/
          docker tag pathfinder-server ${{ secrets.DOCKER_HUB_USERNAME }}/pathfinder-server:${GITHUB_SHA::7}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/pathfinder-server:${GITHUB_SHA::7}

      - name: Set Environment Variables in .env file
        run: |
          echo "S3_ACCESSKEY=${{ secrets.S3_ACCESSKEY }}" >> server/.env
          echo "S3_SECRETKEY=${{ secrets.S3_SECRETKEY }}" >> server/.env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> server/.env
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> server/.env
          echo "G_CLIENT_ID=${{ secrets.G_CLIENT_ID }}" >> server/.env
          echo "G_CLIENT_SECRET=${{ secrets.G_CLIENT_SECRET }}" >> server/.env
          echo "GIT_CLIENT_ID=${{ secrets.GIT_CLIENT_ID }}" >> server/.env
          echo "GIT_CLIENT_SECRET=${{ secrets.GIT_CLIENT_SECRET }}" >> server/.env
          echo "K_CLIENT_ID=${{ secrets.K_CLIENT_ID }}" >> server/.env
          echo "K_CLIENT_SECRET=${{ secrets.K_CLIENT_SECRET }}" >> server/.env
          echo "TOURAPI_SERVICEKEY=${{ secrets.TOURAPI_SERVICEKEY }}" >> server/.env
      

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > pathfinder.pem
          chmod 600 pathfinder.pem

      - name: Deploy to Server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i pathfinder.pem ubuntu@ec2-43-202-120-133.ap-northeast-2.compute.amazonaws.com "bash -s" <<EOF
            if sudo docker ps -a --format '{{.Names}}' | grep -q '^server$'; then
              sudo docker stop server
              sudo docker rm server
            fi
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/pathfinder-server:${GITHUB_SHA::7}
            sudo docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/pathfinder-server:${GITHUB_SHA::7} server
            sudo docker run -d \
            --name server \
            -p 8080:8080 \
            -e S3_ACCESSKEY=${{ secrets.S3_ACCESSKEY }} \
            -e S3_SECRETKEY=${{ secrets.S3_SECRETKEY }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            -e RDS_PASSWORD=${{ secrets.RDS_PASSWORD }} \
            -e G_CLIENT_ID=${{ secrets.G_CLIENT_ID }} \
            -e G_CLIENT_SECRET=${{ secrets.G_CLIENT_SECRET }} \
            -e GIT_CLIENT_ID=${{ secrets.GIT_CLIENT_ID }} \
            -e GIT_CLIENT_SECRET=${{ secrets.GIT_CLIENT_SECRET }} \
            -e K_CLIENT_ID=${{ secrets.K_CLIENT_ID }} \
            -e K_CLIENT_SECRET=${{ secrets.K_CLIENT_SECRET }} \
            -e TOURAPI_SERVICEKEY=${{ secrets.TOURAPI_SERVICEKEY }} \
            ${{ secrets.DOCKER_HUB_USERNAME }}/pathfinder-server:${GITHUB_SHA::7}
          EOF